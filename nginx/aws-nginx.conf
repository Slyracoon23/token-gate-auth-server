# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       443 ssl;
        listen       [::]:443 ssl;
        server_name  _;
        root         /usr/share/nginx/html2;
	index index.html;

	ssl_certificate "/etc/pki/tls/certs/localhost.crt";
        ssl_certificate_key "/etc/pki/tls/private/localhost.key";

	# ssl_protocols TLSv1.3;
	# ssl_dhparam /etc/nginx/dhparam.pem; 
	# ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
	# ssl_ecdh_curve secp384r1;
	# ssl_session_timeout  10m;
	# ssl_session_cache shared:SSL:10m;
	# ssl_session_tickets off;
	# ssl_stapling on;
	# ssl_stapling_verify on;
	# resolver 8.8.8.8 8.8.4.4 valid=300s;
	# resolver_timeout 5s;
	# Disable strict transport security for now. You can uncomment the following
	# line if you understand the implications.
	#add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

	# optional:
	# internal redirect to /login if there is a auth failure
	# delete or comment this out if you don't want this behaviour and just show a generic 401 error
	error_page 401 /login;

	location / {
		auth_request /auth;

		# pass Set-Cookie headers from the subrequest response back to requestor 
		auth_request_set $auth_cookie $upstream_http_set_cookie;
		add_header Set-Cookie $auth_cookie;

		auth_request_set $auth_status $upstream_status;

		try_files $uri $uri/ /index.html;

	}

	location = /auth {
		# internaly only, /auth can not be accessed from outside
		internal;

		# internal proxy to auth-server running on port 3000,  responses expected from proxy:
		# 2xx response = access allowed via auth_request
		# 401 or 403 response = access denied via auth_request
		# anything else = error
		proxy_pass http://localhost:3000;

		# don't pass request body to proxied server, we only need the headers which are passed on by default
		proxy_pass_request_body off;

		# there is no content length since we stripped the request body
		proxy_set_header Content-Length "";
		
		# let proxy server know more details of request
		proxy_set_header X-Original-URI $request_uri;
		proxy_set_header X-Original-Remote-Addr $remote_addr;
		proxy_set_header X-Original-Host $host;
	}

	# these are handled by the proxy as part of the auth routines
	location ~ ^/(login|logged-in|logout)$ {
	    proxy_pass http://localhost:3000;
	    proxy_set_header X-Original-URI $request_uri;
	    proxy_set_header X-Original-Remote-Addr $remote_addr;
	    proxy_set_header X-Original-Host $host;
	}
	# this CSS is used by the three request above and is served by the proxy
	location = /css/skeleton.css {
		proxy_pass http://localhost:3000;
	}

	# optional location block
	# if you have other location blocks, be sure to add auth_request there too otherwise these request won't get protected, for example
	location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
		expires 90d;
		log_not_found off;
		auth_request /auth;
	}

        # error_page 404 /404.html;
        # location = /404.html {
        # }

        # error_page 500 502 503 504 /50x.html;
        # location = /50x.html {
        # }
    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2;
#        listen       [::]:443 ssl http2;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers PROFILE=SYSTEM;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}

